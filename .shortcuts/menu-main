#!/bin/bash

# 主菜单系统
# 集成所有功能模块的统一入口

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# 显示主菜单
show_main_menu() {
    clear
    echo "=========================================="
    echo "           🚀 Termux 服务器项目"
    echo "=========================================="
    echo "1. 🔐 SSH 服务管理"
    echo "2. 🌐 Web 服务管理"
    echo "3. 💾 备份工具"
    echo "4. 📊 系统状态"
    echo "5. 🚪 退出"
    echo "=========================================="
}

# SSH服务管理菜单
show_ssh_menu() {
    clear
    echo "=========================================="
    echo "           🔐 SSH 服务管理"
    echo "=========================================="
    echo "1. ▶️  启动SSH服务"
    echo "2. ▶️  启动优化SSH服务（防息屏断联）"
    echo "3. ⏹️  停止SSH服务"
    echo "4. 📊 查看SSH状态"
    echo "5. ℹ️  SSH连接信息"
    echo "0. ↩️  返回主菜单"
    echo "=========================================="
}

# Web服务管理菜单
show_web_menu() {
    clear
    echo "=========================================="
    echo "           🌐 Web 服务管理"
    echo "=========================================="
    echo "1. ▶️  启动Web服务器"
    echo "2. ⏹️  停止Web服务器"
    echo "3. 📊 查看Web状态"
    echo "4. ℹ️  Web连接信息"
    echo "0. ↩️  返回主菜单"
    echo "=========================================="
}

# 备份工具菜单
show_backup_menu() {
    clear
    echo "=========================================="
    echo "           💾 备份工具"
    echo "=========================================="
    echo "1. 📦 项目备份"
    echo "2. 💻 系统备份"
    echo "3. 🗃️  完整备份"
    echo "4. 🚀 终极备份"
    echo "5. 📋 列出备份文件"
    echo "6. 🧹 清理旧备份"
    echo "0. ↩️  返回主菜单"
    echo "=========================================="
}

# 处理SSH菜单选项
handle_ssh_menu() {
    while true; do
        show_ssh_menu
        read -p "请选择: " ssh_choice
        
        case $ssh_choice in
            1)
                echo -e "${BLUE}启动SSH服务...${NC}"
                ~/.shortcuts/service-ssh start
                echo -e "${GREEN}✅ SSH服务启动完成${NC}"
                read -p "按回车键继续..."
                ;;
            2)
                echo -e "${BLUE}启动优化SSH服务...${NC}"
                ~/.shortcuts/service-ssh start --optimized
                echo -e "${GREEN}✅ 优化SSH服务启动完成${NC}"
                read -p "按回车键继续..."
                ;;
            3)
                echo -e "${BLUE}停止SSH服务...${NC}"
                ~/.shortcuts/service-ssh stop
                echo -e "${GREEN}✅ SSH服务已停止${NC}"
                read -p "按回车键继续..."
                ;;
            4)
                echo -e "${BLUE}检查SSH服务状态...${NC}"
                ~/.shortcuts/service-ssh status
                read -p "按回车键继续..."
                ;;
            5)
                echo -e "${BLUE}显示SSH连接信息...${NC}"
                ~/.shortcuts/service-ssh info --with-guide
                read -p "按回车键继续..."
                ;;
            0)
                return
                ;;
            *)
                echo -e "${RED}无效选择，请重新输入${NC}"
                sleep 1
                ;;
        esac
    done
}

# 处理Web菜单选项
handle_web_menu() {
    while true; do
        show_web_menu
        read -p "请选择: " web_choice
        
        case $web_choice in
            1)
                echo -e "${BLUE}启动Web服务器...${NC}"
                ~/.shortcuts/service-web start --type server
                echo -e "${GREEN}✅ Web服务器启动完成${NC}"
                read -p "按回车键继续..."
                ;;
            2)
                echo -e "${BLUE}停止Web服务器...${NC}"
                ~/.shortcuts/service-web stop --type server
                echo -e "${GREEN}✅ Web服务器已停止${NC}"
                read -p "按回车键继续..."
                ;;
            3)
                echo -e "${BLUE}检查Web服务状态...${NC}"
                ~/.shortcuts/service-web status --type server
                read -p "按回车键继续..."
                ;;
            4)
                echo -e "${BLUE}显示Web连接信息...${NC}"
                ~/.shortcuts/service-web info --with-guide
                read -p "按回车键继续..."
                ;;
            0)
                return
                ;;
            *)
                echo -e "${RED}无效选择，请重新输入${NC}"
                sleep 1
                ;;
        esac
    done
}

# 处理备份菜单选项
handle_backup_menu() {
    while true; do
        show_backup_menu
        read -p "请选择: " backup_choice
        
        case $backup_choice in
            1)
                echo -e "${BLUE}执行项目备份...${NC}"
                ~/.shortcuts/tool-backup backup --type project
                echo -e "${GREEN}✅ 项目备份完成${NC}"
                read -p "按回车键继续..."
                ;;
            2)
                echo -e "${BLUE}执行系统备份...${NC}"
                ~/.shortcuts/tool-backup backup --type system
                echo -e "${GREEN}✅ 系统备份完成${NC}"
                read -p "按回车键继续..."
                ;;
            3)
                echo -e "${BLUE}执行完整备份...${NC}"
                ~/.shortcuts/tool-backup backup --type full
                echo -e "${GREEN}✅ 完整备份完成${NC}"
                read -p "按回车键继续..."
                ;;
            4)
                echo -e "${BLUE}执行终极备份...${NC}"
                ~/.shortcuts/tool-backup backup --type ultimate
                echo -e "${GREEN}✅ 终极备份完成${NC}"
                read -p "按回车键继续..."
                ;;
            5)
                echo -e "${BLUE}列出备份文件...${NC}"
                ~/.shortcuts/tool-backup list
                read -p "按回车键继续..."
                ;;
            6)
                echo -e "${BLUE}清理旧备份...${NC}"
                ~/.shortcuts/tool-backup clean
                echo -e "${GREEN}✅ 备份清理完成${NC}"
                read -p "按回车键继续..."
                ;;
            0)
                return
                ;;
            *)
                echo -e "${RED}无效选择，请重新输入${NC}"
                sleep 1
                ;;
        esac
    done
}

# 主程序循环
main() {
    while true; do
        show_main_menu
        read -p "请选择: " main_choice
        
        case $main_choice in
            1)
                handle_ssh_menu
                ;;
            2)
                handle_web_menu
                ;;
            3)
                handle_backup_menu
                ;;
            4)
                echo -e "${YELLOW}显示系统状态...${NC}"
                if command -v neofetch >/dev/null 2>&1; then
                    neofetch
                else
                    echo "系统信息:"
                    uname -a
                    echo "用户: $(whoami)"
                    echo "当前目录: $(pwd)"
                fi
                read -p "按回车键继续..."
                ;;
            5)
                echo -e "${GREEN}感谢使用 Termux 服务器项目！${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}无效选择，请重新输入${NC}"
                sleep 1
                ;;
        esac
    done
}

# 执行主程序
main