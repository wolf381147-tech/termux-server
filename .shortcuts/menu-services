#!/bin/bash

# 整合服务管理菜单
# 将SSH和Web服务的启动、停止、状态查看、连接信息等功能整合在一起

# 颜色定义
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# 显示整合服务管理菜单
show_services_menu() {
    clear
    echo "=========================================="
    echo "           🚀 服务管理面板"
    echo "=========================================="
    echo "SSH 服务:"
    echo "  1. ▶️  启动SSH服务"
    echo "  2. ⏹️  停止SSH服务"
    echo "  3. 📊 查看SSH状态"
    echo "  4. ℹ️  SSH连接信息"
    echo ""
    echo "Web 服务:"
    echo "  5. ▶️  启动Web服务器"
    echo "  6. ⏹️  停止Web服务器"
    echo "  7. 📊 查看Web状态"
    echo "  8. ℹ️  Web连接信息"
    echo ""
    echo "其他操作:"
    echo "  9. 🔄 重启所有服务"
    echo "  10. 📊 查看所有服务状态"
    echo "  0. ↩️  返回主菜单"
    echo "=========================================="
}

# 显示SSH连接信息
show_ssh_info() {
    echo "=========================================="
    echo "           🔐 SSH连接信息"
    echo "=========================================="
    
    # 获取SSH服务状态
    if pgrep sshd > /dev/null; then
        echo -e "${GREEN}✅ SSH服务正在运行${NC}"
    else
        echo -e "${RED}❌ SSH服务未运行${NC}"
    fi
    
    # 获取IP地址信息
    local local_ip=$(ip addr show wlan0 2>/dev/null | grep "inet " | awk '{print $2}' | cut -d/ -f1)
    if [ -z "$local_ip" ]; then
        local_ip="无法获取本地IP，请检查WiFi连接"
    fi
    
    local public_ip=$(curl -s https://api.ipify.org 2>/dev/null || echo "无法获取公共IP")
    
    echo "📱 本地IP: $local_ip"
    echo "🌐 公共IP: $public_ip"
    echo "🔌 端口: 8022"
    echo "👤 用户名: $(whoami)"
    echo "=========================================="
    echo "💻 从电脑连接:"
    echo "   ssh $(whoami)@$local_ip -p 8022"
    echo "=========================================="
}

# 显示Web连接信息
show_web_info() {
    echo "=========================================="
    echo "           🌐 Web连接信息"
    echo "=========================================="
    
    # 获取Web服务状态
    if pgrep -f "http.server" > /dev/null; then
        echo -e "${GREEN}✅ Web服务器正在运行${NC}"
    else
        echo -e "${RED}❌ Web服务器未运行${NC}"
    fi
    
    # 获取IP地址信息
    local local_ip=$(ip addr show wlan0 2>/dev/null | grep "inet " | awk '{print $2}' | cut -d/ -f1)
    if [ -z "$local_ip" ]; then
        local_ip="无法获取本地IP，请检查WiFi连接"
    fi
    
    local public_ip=$(curl -s https://api.ipify.org 2>/dev/null || echo "无法获取公共IP")
    
    echo "📱 本地IP: $local_ip"
    echo "🌐 公共IP: $public_ip"
    echo "🔌 端口: 8000"
    echo "📂 目录: ~/storage/shared/termux-projects"
    echo "=========================================="
    echo "💻 访问地址:"
    echo "   http://$local_ip:8000"
    echo "=========================================="
}

# 显示所有服务状态
show_all_status() {
    echo "=========================================="
    echo "           📊 服务状态总览"
    echo "=========================================="
    
    # SSH服务状态
    echo -n "🔐 SSH服务: "
    if pgrep sshd > /dev/null; then
        echo -e "${GREEN}运行中${NC}"
    else
        echo -e "${RED}已停止${NC}"
    fi
    
    # Web服务器状态
    echo -n "🌐 Web服务器: "
    if pgrep -f "http.server" > /dev/null; then
        echo -e "${GREEN}运行中${NC}"
    else
        echo -e "${RED}已停止${NC}"
    fi
    
    # Web文件管理器状态
    echo -n "📁 Web文件管理器: "
    if pgrep -f "web-file-manager.py" > /dev/null; then
        echo -e "${GREEN}运行中${NC}"
    else
        echo -e "${RED}已停止${NC}"
    fi
    
    # Web GUI状态
    echo -n "🖥️  Web GUI: "
    if pgrep -f "web-gui/app.py" > /dev/null; then
        echo -e "${GREEN}运行中${NC}"
    else
        echo -e "${RED}已停止${NC}"
    fi
    
    echo "=========================================="
}

# 重启所有服务
restart_all_services() {
    echo -e "${BLUE}🔄 正在重启所有服务...${NC}"
    
    # 停止所有服务
    echo -e "${YELLOW}⏹️  停止所有服务...${NC}"
    ~/.shortcuts/service-ssh stop > /dev/null 2>&1
    ~/.shortcuts/service-web stop --type server > /dev/null 2>&1
    ~/.shortcuts/service-web stop --type manager > /dev/null 2>&1
    ~/.shortcuts/service-web stop --type gui > /dev/null 2>&1
    sleep 2
    
    # 启动核心服务
    echo -e "${YELLOW}▶️  启动核心服务...${NC}"
    ~/.shortcuts/service-ssh start --optimized > /dev/null 2>&1
    ~/.shortcuts/service-web start --type server > /dev/null 2>&1
    ~/.shortcuts/service-web start --type manager --background > /dev/null 2>&1
    sleep 2
    
    echo -e "${GREEN}✅ 所有服务已重启${NC}"
}

# 主循环
main() {
    while true; do
        show_services_menu
        read -p "请选择操作: " choice
        
        case $choice in
            1)
                echo -e "${BLUE}▶️  正在启动SSH服务...${NC}"
                ~/.shortcuts/service-ssh start --optimized
                echo -e "${GREEN}✅ SSH服务启动完成${NC}"
                read -p "按回车键继续..."
                ;;
            2)
                echo -e "${BLUE}⏹️  正在停止SSH服务...${NC}"
                ~/.shortcuts/service-ssh stop
                echo -e "${GREEN}✅ SSH服务已停止${NC}"
                read -p "按回车键继续..."
                ;;
            3)
                echo -e "${BLUE}📊 检查SSH服务状态...${NC}"
                ~/.shortcuts/service-ssh status
                read -p "按回车键继续..."
                ;;
            4)
                show_ssh_info
                read -p "按回车键继续..."
                ;;
            5)
                echo -e "${BLUE}▶️  正在启动Web服务器...${NC}"
                ~/.shortcuts/service-web start --type server
                echo -e "${GREEN}✅ Web服务器启动完成${NC}"
                read -p "按回车键继续..."
                ;;
            6)
                echo -e "${BLUE}⏹️  正在停止Web服务器...${NC}"
                ~/.shortcuts/service-web stop --type server
                echo -e "${GREEN}✅ Web服务器已停止${NC}"
                read -p "按回车键继续..."
                ;;
            7)
                echo -e "${BLUE}📊 检查Web服务状态...${NC}"
                ~/.shortcuts/service-web status --type server
                read -p "按回车键继续..."
                ;;
            8)
                show_web_info
                read -p "按回车键继续..."
                ;;
            9)
                restart_all_services
                read -p "按回车键继续..."
                ;;
            10)
                show_all_status
                read -p "按回车键继续..."
                ;;
            0)
                echo -e "${GREEN}↩️  返回主菜单${NC}"
                return
                ;;
            *)
                echo -e "${RED}无效选择，请重新输入${NC}"
                sleep 1
                ;;
        esac
    done
}

# 执行主程序
main